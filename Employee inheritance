#include <iostream>
#include <string>
using namespace std;

// Base class
class Employee {
protected:
    string name;
    int id;

public:
    // Constructor
    Employee(string n, int i) : name(n), id(i) {}

    // Virtual function to calculate salary
    virtual double calculateSalary() const = 0;

    // Function to display employee details
    void displayDetails() const {
        cout << "Name: " << name << endl;
        cout << "ID: " << id << endl;
        cout << "Salary: $" << calculateSalary() << endl;
    }

    // Virtual destructor
    virtual ~Employee() {}
};

// Derived class for Full-Time Employees
class FullTimeEmployee : public Employee {
private:
    double annualSalary;

public:
    // Constructor
    FullTimeEmployee(string n, int i, double salary) : Employee(n, i), annualSalary(salary) {}

    // Override calculateSalary function
    double calculateSalary() const override {
        return annualSalary;
    }
};

// Derived class for Part-Time Employees
class PartTimeEmployee : public Employee {
private:
    double hourlyRate;
    int hoursWorked;

public:
    // Constructor
    PartTimeEmployee(string n, in
